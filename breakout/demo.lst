
demo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000006ac  00000720  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006ac  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00001848  00000000  00000000  00000720  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000dae  00000000  00000000  00001f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00002d16  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002d28  2**2
                  CONTENTS, READONLY
  6 .debug_info   000009f4  00000000  00000000  00002d68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000096a  00000000  00000000  0000375c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000001d  00000000  00000000  000040c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000371  00000000  00000000  000040e3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  6c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  70:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  74:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  7c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  80:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  84:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  88:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  8c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  90:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  94:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  98:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  9c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	0e 94 a6 02 	call	0x54c	; 0x54c <main>
  bc:	0c 94 54 03 	jmp	0x6a8	; 0x6a8 <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <init_i2c>:
#include "i2c.h"
/*
 * Initialization of the I2C bus
 */
void init_i2c() {
	PORTD &= ~(1 << 0); //Port D0 SCL
  c4:	58 98       	cbi	0x0b, 0	; 11
	PORTD &= ~(1 << 1); //Port D1 SDA
  c6:	59 98       	cbi	0x0b, 1	; 11
	TWBR = ((( F_CPU / SCL_CLOCK ) - 16) / 2); 
  c8:	8c e0       	ldi	r24, 0x0C	; 12
  ca:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	TWSR = 0; 
  ce:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = ( 1 << TWEN ); // enable the i2c bus f
  d2:	84 e0       	ldi	r24, 0x04	; 4
  d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
}
  d8:	08 95       	ret

000000da <connect_i2c>:
 * Sends the start condition
 */
void start_i2c() {
	uint8_t   twstatus;
	// send START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
  da:	94 ea       	ldi	r25, 0xA4	; 164
  dc:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	
	// wait until transmission completed
	while ( !(TWCR & (1<<TWINT)))	;
  e0:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  e4:	97 ff       	sbrs	r25, 7
  e6:	fc cf       	rjmp	.-8      	; 0xe0 <connect_i2c+0x6>
	twstatus = TW_STATUS & 0xF8;
  e8:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 * adr: address of the hardware
 * w: read or write flag
 */
void send_address_i2c(uint8_t adr, uint8_t w) {
	uint8_t   twstatus;
	TWDR = (adr<<1) | w ;
  ec:	88 0f       	add	r24, r24
  ee:	86 2b       	or	r24, r22
  f0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
  f4:	84 e8       	ldi	r24, 0x84	; 132
  f6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	
	while(!(TWCR & (1 << TWINT)));
  fa:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  fe:	87 ff       	sbrs	r24, 7
 100:	fc cf       	rjmp	.-8      	; 0xfa <connect_i2c+0x20>
	twstatus = TW_STATUS & 0xF8;
 102:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
}
 106:	08 95       	ret

00000108 <start_i2c>:
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 108:	84 ea       	ldi	r24, 0xA4	; 164
 10a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ( !(TWCR & (1<<TWINT)))	;
 10e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 112:	87 ff       	sbrs	r24, 7
 114:	fc cf       	rjmp	.-8      	; 0x10e <start_i2c+0x6>
	twstatus = TW_STATUS & 0xF8;
 116:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
}
 11a:	08 95       	ret

0000011c <send_address_i2c>:
	TWDR = (adr<<1) | w ;
 11c:	88 0f       	add	r24, r24
 11e:	86 2b       	or	r24, r22
 120:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 124:	84 e8       	ldi	r24, 0x84	; 132
 126:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 12a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 12e:	87 ff       	sbrs	r24, 7
 130:	fc cf       	rjmp	.-8      	; 0x12a <send_address_i2c+0xe>
	twstatus = TW_STATUS & 0xF8;
 132:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	if ( (twstatus != TW_MT_SLA_ACK) && (twstatus != TW_MR_SLA_ACK) ) {
	}
}
 136:	08 95       	ret

00000138 <stop_i2c>:

/*
 * sends the stop condition
 */
void stop_i2c() {
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 138:	84 e9       	ldi	r24, 0x94	; 148
 13a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(TWCR & (1 << TWSTO));
 13e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 142:	84 fd       	sbrc	r24, 4
 144:	fc cf       	rjmp	.-8      	; 0x13e <stop_i2c+0x6>
}
 146:	08 95       	ret

00000148 <send_i2c>:
 * data: byte to send
 */
void send_i2c(uint8_t data) {
	uint8_t   twstatus;
	// send data to the previously addressed device
	TWDR = data;
 148:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 14c:	84 e8       	ldi	r24, 0x84	; 132
 14e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	
	// wait until transmission completed
	while(!(TWCR & (1 << TWINT)));
 152:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 156:	87 ff       	sbrs	r24, 7
 158:	fc cf       	rjmp	.-8      	; 0x152 <send_i2c+0xa>
	twstatus = TW_STATUS & 0xF8;
 15a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	if( twstatus != TW_MT_DATA_ACK){
		
	}
}
 15e:	08 95       	ret

00000160 <read_i2c>:

/*
 * receive one byte of the I2C hardware, followed by a stop condition
 */
int8_t read_i2c() {
	TWCR = (1 << TWINT) | (1 << TWEN);
 160:	84 e8       	ldi	r24, 0x84	; 132
 162:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 166:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 16a:	87 ff       	sbrs	r24, 7
 16c:	fc cf       	rjmp	.-8      	; 0x166 <read_i2c+0x6>
	return TWDR;
 16e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}
 172:	08 95       	ret

00000174 <readAck_i2c>:

/*
 * receive one byte of the I2C hardware, request more data from hardware
 */
int8_t readAck_i2c() {
	TWCR = (1 << TWINT) | (1 << TWEN) | (1<<TWEA);
 174:	84 ec       	ldi	r24, 0xC4	; 196
 176:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 17a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 17e:	87 ff       	sbrs	r24, 7
 180:	fc cf       	rjmp	.-8      	; 0x17a <readAck_i2c+0x6>
	return TWDR;
 182:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}
 186:	08 95       	ret

00000188 <writeByte>:
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 188:	94 ea       	ldi	r25, 0xA4	; 164
 18a:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ( !(TWCR & (1<<TWINT)))	;
 18e:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 192:	97 ff       	sbrs	r25, 7
 194:	fc cf       	rjmp	.-8      	; 0x18e <writeByte+0x6>
	twstatus = TW_STATUS & 0xF8;
 196:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = (adr<<1) | w ;
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	88 0f       	add	r24, r24
 19e:	99 1f       	adc	r25, r25
 1a0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 1a4:	84 e8       	ldi	r24, 0x84	; 132
 1a6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 1aa:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1ae:	87 ff       	sbrs	r24, 7
 1b0:	fc cf       	rjmp	.-8      	; 0x1aa <writeByte+0x22>
	twstatus = TW_STATUS & 0xF8;
 1b2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 1b6:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 1ba:	84 e8       	ldi	r24, 0x84	; 132
 1bc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 1c0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1c4:	87 ff       	sbrs	r24, 7
 1c6:	fc cf       	rjmp	.-8      	; 0x1c0 <writeByte+0x38>
	twstatus = TW_STATUS & 0xF8;
 1c8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 1cc:	40 93 bb 00 	sts	0x00BB, r20	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 1d0:	84 e8       	ldi	r24, 0x84	; 132
 1d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 1d6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1da:	87 ff       	sbrs	r24, 7
 1dc:	fc cf       	rjmp	.-8      	; 0x1d6 <writeByte+0x4e>
	twstatus = TW_STATUS & 0xF8;
 1de:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 1e2:	84 e9       	ldi	r24, 0x94	; 148
 1e4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(TWCR & (1 << TWSTO));
 1e8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1ec:	84 fd       	sbrc	r24, 4
 1ee:	fc cf       	rjmp	.-8      	; 0x1e8 <writeByte+0x60>
{
    connect_i2c(device, 0);
    send_i2c(adr);
    send_i2c(data);
    stop_i2c();
}
 1f0:	08 95       	ret

000001f2 <error_light>:
//#include "i2c_master.c"
#include "i2c.c"
#include "MPR121_breakout.h"
#define MPR121_ADDR 0x5A

void error_light() { PORTC |= (1 << DDC6); }
 1f2:	46 9a       	sbi	0x08, 6	; 8
 1f4:	08 95       	ret

000001f6 <init_MPR121>:
    uint8_t ACE_ARE = 0x03;
    uint8_t LSL = 180;
    uint8_t TL = 100;

    //reset everything back to default
    writeByte(MPR121_ADDR, SOFT_RESET, 0x63);
 1f6:	43 e6       	ldi	r20, 0x63	; 99
 1f8:	60 e8       	ldi	r22, 0x80	; 128
 1fa:	8a e5       	ldi	r24, 0x5A	; 90
 1fc:	0e 94 c4 00 	call	0x188	; 0x188 <writeByte>
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 200:	84 ea       	ldi	r24, 0xA4	; 164
 202:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ( !(TWCR & (1<<TWINT)))	;
 206:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 20a:	87 ff       	sbrs	r24, 7
 20c:	fc cf       	rjmp	.-8      	; 0x206 <init_MPR121+0x10>
	twstatus = TW_STATUS & 0xF8;
 20e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = (adr<<1) | w ;
 212:	84 eb       	ldi	r24, 0xB4	; 180
 214:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 218:	84 e8       	ldi	r24, 0x84	; 132
 21a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 21e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 222:	87 ff       	sbrs	r24, 7
 224:	fc cf       	rjmp	.-8      	; 0x21e <init_MPR121+0x28>
	twstatus = TW_STATUS & 0xF8;
 226:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 22a:	8d e7       	ldi	r24, 0x7D	; 125
 22c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 230:	84 e8       	ldi	r24, 0x84	; 132
 232:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 236:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 23a:	87 ff       	sbrs	r24, 7
 23c:	fc cf       	rjmp	.-8      	; 0x236 <init_MPR121+0x40>
	twstatus = TW_STATUS & 0xF8;
 23e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 242:	88 ec       	ldi	r24, 0xC8	; 200
 244:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 248:	84 e8       	ldi	r24, 0x84	; 132
 24a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 24e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 252:	87 ff       	sbrs	r24, 7
 254:	fc cf       	rjmp	.-8      	; 0x24e <init_MPR121+0x58>
	twstatus = TW_STATUS & 0xF8;
 256:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 25a:	84 e9       	ldi	r24, 0x94	; 148
 25c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(TWCR & (1 << TWSTO));
 260:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 264:	84 fd       	sbrc	r24, 4
 266:	fc cf       	rjmp	.-8      	; 0x260 <init_MPR121+0x6a>
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 268:	84 ea       	ldi	r24, 0xA4	; 164
 26a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ( !(TWCR & (1<<TWINT)))	;
 26e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 272:	87 ff       	sbrs	r24, 7
 274:	fc cf       	rjmp	.-8      	; 0x26e <init_MPR121+0x78>
	twstatus = TW_STATUS & 0xF8;
 276:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = (adr<<1) | w ;
 27a:	84 eb       	ldi	r24, 0xB4	; 180
 27c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 280:	84 e8       	ldi	r24, 0x84	; 132
 282:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 286:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 28a:	87 ff       	sbrs	r24, 7
 28c:	fc cf       	rjmp	.-8      	; 0x286 <init_MPR121+0x90>
	twstatus = TW_STATUS & 0xF8;
 28e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 292:	8b e7       	ldi	r24, 0x7B	; 123
 294:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 298:	84 e8       	ldi	r24, 0x84	; 132
 29a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 29e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2a2:	87 ff       	sbrs	r24, 7
 2a4:	fc cf       	rjmp	.-8      	; 0x29e <init_MPR121+0xa8>
	twstatus = TW_STATUS & 0xF8;
 2a6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 2aa:	83 e0       	ldi	r24, 0x03	; 3
 2ac:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 2b0:	84 e8       	ldi	r24, 0x84	; 132
 2b2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 2b6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2ba:	87 ff       	sbrs	r24, 7
 2bc:	fc cf       	rjmp	.-8      	; 0x2b6 <init_MPR121+0xc0>
	twstatus = TW_STATUS & 0xF8;
 2be:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 2c2:	84 e9       	ldi	r24, 0x94	; 148
 2c4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(TWCR & (1 << TWSTO));
 2c8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2cc:	84 fd       	sbrc	r24, 4
 2ce:	fc cf       	rjmp	.-8      	; 0x2c8 <init_MPR121+0xd2>
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 2d0:	84 ea       	ldi	r24, 0xA4	; 164
 2d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ( !(TWCR & (1<<TWINT)))	;
 2d6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2da:	87 ff       	sbrs	r24, 7
 2dc:	fc cf       	rjmp	.-8      	; 0x2d6 <init_MPR121+0xe0>
	twstatus = TW_STATUS & 0xF8;
 2de:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = (adr<<1) | w ;
 2e2:	84 eb       	ldi	r24, 0xB4	; 180
 2e4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 2e8:	84 e8       	ldi	r24, 0x84	; 132
 2ea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 2ee:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2f2:	87 ff       	sbrs	r24, 7
 2f4:	fc cf       	rjmp	.-8      	; 0x2ee <init_MPR121+0xf8>
	twstatus = TW_STATUS & 0xF8;
 2f6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 2fa:	8e e7       	ldi	r24, 0x7E	; 126
 2fc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 300:	84 e8       	ldi	r24, 0x84	; 132
 302:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 306:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 30a:	87 ff       	sbrs	r24, 7
 30c:	fc cf       	rjmp	.-8      	; 0x306 <init_MPR121+0x110>
	twstatus = TW_STATUS & 0xF8;
 30e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 312:	84 eb       	ldi	r24, 0xB4	; 180
 314:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 318:	84 e8       	ldi	r24, 0x84	; 132
 31a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 31e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 322:	87 ff       	sbrs	r24, 7
 324:	fc cf       	rjmp	.-8      	; 0x31e <init_MPR121+0x128>
	twstatus = TW_STATUS & 0xF8;
 326:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 32a:	84 e9       	ldi	r24, 0x94	; 148
 32c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(TWCR & (1 << TWSTO));
 330:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 334:	84 fd       	sbrc	r24, 4
 336:	fc cf       	rjmp	.-8      	; 0x330 <init_MPR121+0x13a>
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 338:	84 ea       	ldi	r24, 0xA4	; 164
 33a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ( !(TWCR & (1<<TWINT)))	;
 33e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 342:	87 ff       	sbrs	r24, 7
 344:	fc cf       	rjmp	.-8      	; 0x33e <init_MPR121+0x148>
	twstatus = TW_STATUS & 0xF8;
 346:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = (adr<<1) | w ;
 34a:	84 eb       	ldi	r24, 0xB4	; 180
 34c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 350:	84 e8       	ldi	r24, 0x84	; 132
 352:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 356:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 35a:	87 ff       	sbrs	r24, 7
 35c:	fc cf       	rjmp	.-8      	; 0x356 <init_MPR121+0x160>
	twstatus = TW_STATUS & 0xF8;
 35e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 362:	8f e7       	ldi	r24, 0x7F	; 127
 364:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 368:	84 e8       	ldi	r24, 0x84	; 132
 36a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 36e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 372:	87 ff       	sbrs	r24, 7
 374:	fc cf       	rjmp	.-8      	; 0x36e <init_MPR121+0x178>
	twstatus = TW_STATUS & 0xF8;
 376:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 37a:	84 e6       	ldi	r24, 0x64	; 100
 37c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 380:	84 e8       	ldi	r24, 0x84	; 132
 382:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 386:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 38a:	87 ff       	sbrs	r24, 7
 38c:	fc cf       	rjmp	.-8      	; 0x386 <init_MPR121+0x190>
	twstatus = TW_STATUS & 0xF8;
 38e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 392:	84 e9       	ldi	r24, 0x94	; 148
 394:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(TWCR & (1 << TWSTO));
 398:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 39c:	84 fd       	sbrc	r24, 4
 39e:	fc cf       	rjmp	.-8      	; 0x398 <init_MPR121+0x1a2>
 3a0:	23 e4       	ldi	r18, 0x43	; 67
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 3a2:	54 ea       	ldi	r21, 0xA4	; 164
	TWDR = (adr<<1) | w ;
 3a4:	44 eb       	ldi	r20, 0xB4	; 180
	TWCR = (1 << TWINT) | (1<<TWEN);
 3a6:	94 e8       	ldi	r25, 0x84	; 132
	TWDR = data;
 3a8:	7c e0       	ldi	r23, 0x0C	; 12
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 3aa:	34 e9       	ldi	r19, 0x94	; 148
	TWDR = data;
 3ac:	66 e0       	ldi	r22, 0x06	; 6
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 3ae:	50 93 bc 00 	sts	0x00BC, r21	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ( !(TWCR & (1<<TWINT)))	;
 3b2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 3b6:	87 ff       	sbrs	r24, 7
 3b8:	fc cf       	rjmp	.-8      	; 0x3b2 <init_MPR121+0x1bc>
	twstatus = TW_STATUS & 0xF8;
 3ba:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = (adr<<1) | w ;
 3be:	40 93 bb 00 	sts	0x00BB, r20	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 3c2:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 3c6:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 3ca:	87 ff       	sbrs	r24, 7
 3cc:	fc cf       	rjmp	.-8      	; 0x3c6 <init_MPR121+0x1d0>
	twstatus = TW_STATUS & 0xF8;
 3ce:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>

    //set touch and release threshholds
    for (uint8_t i = 0; i < 12; i++) 
    {
        connect_i2c(MPR121_ADDR, 0);
        send_i2c(ELE0_TOUCH_THRESHOLD + (i * 2));
 3d2:	8e ef       	ldi	r24, 0xFE	; 254
 3d4:	82 0f       	add	r24, r18
	TWDR = data;
 3d6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 3da:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 3de:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 3e2:	87 ff       	sbrs	r24, 7
 3e4:	fc cf       	rjmp	.-8      	; 0x3de <init_MPR121+0x1e8>
	twstatus = TW_STATUS & 0xF8;
 3e6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 3ea:	70 93 bb 00 	sts	0x00BB, r23	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 3ee:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 3f2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 3f6:	87 ff       	sbrs	r24, 7
 3f8:	fc cf       	rjmp	.-8      	; 0x3f2 <init_MPR121+0x1fc>
	twstatus = TW_STATUS & 0xF8;
 3fa:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 3fe:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(TWCR & (1 << TWSTO));
 402:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 406:	84 fd       	sbrc	r24, 4
 408:	fc cf       	rjmp	.-8      	; 0x402 <__FUSE_REGION_LENGTH__+0x2>
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 40a:	50 93 bc 00 	sts	0x00BC, r21	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ( !(TWCR & (1<<TWINT)))	;
 40e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 412:	87 ff       	sbrs	r24, 7
 414:	fc cf       	rjmp	.-8      	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
	twstatus = TW_STATUS & 0xF8;
 416:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = (adr<<1) | w ;
 41a:	40 93 bb 00 	sts	0x00BB, r20	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 41e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 422:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 426:	87 ff       	sbrs	r24, 7
 428:	fc cf       	rjmp	.-8      	; 0x422 <__FUSE_REGION_LENGTH__+0x22>
	twstatus = TW_STATUS & 0xF8;
 42a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 42e:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 432:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 436:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 43a:	87 ff       	sbrs	r24, 7
 43c:	fc cf       	rjmp	.-8      	; 0x436 <__FUSE_REGION_LENGTH__+0x36>
	twstatus = TW_STATUS & 0xF8;
 43e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 442:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 446:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 44a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 44e:	87 ff       	sbrs	r24, 7
 450:	fc cf       	rjmp	.-8      	; 0x44a <__FUSE_REGION_LENGTH__+0x4a>
	twstatus = TW_STATUS & 0xF8;
 452:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 456:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(TWCR & (1 << TWSTO));
 45a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 45e:	84 fd       	sbrc	r24, 4
 460:	fc cf       	rjmp	.-8      	; 0x45a <__FUSE_REGION_LENGTH__+0x5a>
 462:	2e 5f       	subi	r18, 0xFE	; 254
    for (uint8_t i = 0; i < 12; i++) 
 464:	2b 35       	cpi	r18, 0x5B	; 91
 466:	09 f0       	breq	.+2      	; 0x46a <__FUSE_REGION_LENGTH__+0x6a>
 468:	a2 cf       	rjmp	.-188    	; 0x3ae <init_MPR121+0x1b8>
        send_i2c(ELE0_RELEASE_THRESHOLD + 1 + (i * 2));
        send_i2c(6);
        stop_i2c();
    }

    writeByte(MPR121_ADDR, NHDR, 0x01);
 46a:	41 e0       	ldi	r20, 0x01	; 1
 46c:	6c e2       	ldi	r22, 0x2C	; 44
 46e:	8a e5       	ldi	r24, 0x5A	; 90
 470:	0e 94 c4 00 	call	0x188	; 0x188 <writeByte>

    writeByte(MPR121_ADDR, MHDR, 0x01);
 474:	41 e0       	ldi	r20, 0x01	; 1
 476:	6b e2       	ldi	r22, 0x2B	; 43
 478:	8a e5       	ldi	r24, 0x5A	; 90
 47a:	0e 94 c4 00 	call	0x188	; 0x188 <writeByte>
    writeByte(MPR121_ADDR, NHDR, 0x01);
 47e:	41 e0       	ldi	r20, 0x01	; 1
 480:	6c e2       	ldi	r22, 0x2C	; 44
 482:	8a e5       	ldi	r24, 0x5A	; 90
 484:	0e 94 c4 00 	call	0x188	; 0x188 <writeByte>
    writeByte(MPR121_ADDR, NCLR, 0x0F);
 488:	4f e0       	ldi	r20, 0x0F	; 15
 48a:	6d e2       	ldi	r22, 0x2D	; 45
 48c:	8a e5       	ldi	r24, 0x5A	; 90
 48e:	0e 94 c4 00 	call	0x188	; 0x188 <writeByte>
    writeByte(MPR121_ADDR, FDLR, 0x00);
 492:	40 e0       	ldi	r20, 0x00	; 0
 494:	6e e2       	ldi	r22, 0x2E	; 46
 496:	8a e5       	ldi	r24, 0x5A	; 90
 498:	0e 94 c4 00 	call	0x188	; 0x188 <writeByte>

    writeByte(MPR121_ADDR, MHDF, 0x01);
 49c:	41 e0       	ldi	r20, 0x01	; 1
 49e:	6f e2       	ldi	r22, 0x2F	; 47
 4a0:	8a e5       	ldi	r24, 0x5A	; 90
 4a2:	0e 94 c4 00 	call	0x188	; 0x188 <writeByte>
    writeByte(MPR121_ADDR, NHDF, 0x05);
 4a6:	45 e0       	ldi	r20, 0x05	; 5
 4a8:	60 e3       	ldi	r22, 0x30	; 48
 4aa:	8a e5       	ldi	r24, 0x5A	; 90
 4ac:	0e 94 c4 00 	call	0x188	; 0x188 <writeByte>
    writeByte(MPR121_ADDR, NCLF, 0x01);
 4b0:	41 e0       	ldi	r20, 0x01	; 1
 4b2:	61 e3       	ldi	r22, 0x31	; 49
 4b4:	8a e5       	ldi	r24, 0x5A	; 90
 4b6:	0e 94 c4 00 	call	0x188	; 0x188 <writeByte>
    writeByte(MPR121_ADDR, FDLF, 0x00);
 4ba:	40 e0       	ldi	r20, 0x00	; 0
 4bc:	62 e3       	ldi	r22, 0x32	; 50
 4be:	8a e5       	ldi	r24, 0x5A	; 90
 4c0:	0e 94 c4 00 	call	0x188	; 0x188 <writeByte>

    writeByte(MPR121_ADDR, NHDT, 0x00);
 4c4:	40 e0       	ldi	r20, 0x00	; 0
 4c6:	63 e3       	ldi	r22, 0x33	; 51
 4c8:	8a e5       	ldi	r24, 0x5A	; 90
 4ca:	0e 94 c4 00 	call	0x188	; 0x188 <writeByte>
    writeByte(MPR121_ADDR, NCLT, 0x00);
 4ce:	40 e0       	ldi	r20, 0x00	; 0
 4d0:	64 e3       	ldi	r22, 0x34	; 52
 4d2:	8a e5       	ldi	r24, 0x5A	; 90
 4d4:	0e 94 c4 00 	call	0x188	; 0x188 <writeByte>
    writeByte(MPR121_ADDR, FDLT, 0x00);
 4d8:	40 e0       	ldi	r20, 0x00	; 0
 4da:	65 e3       	ldi	r22, 0x35	; 53
 4dc:	8a e5       	ldi	r24, 0x5A	; 90
 4de:	0e 94 c4 00 	call	0x188	; 0x188 <writeByte>
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 4e2:	84 ea       	ldi	r24, 0xA4	; 164
 4e4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ( !(TWCR & (1<<TWINT)))	;
 4e8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 4ec:	87 ff       	sbrs	r24, 7
 4ee:	fc cf       	rjmp	.-8      	; 0x4e8 <__FUSE_REGION_LENGTH__+0xe8>
	twstatus = TW_STATUS & 0xF8;
 4f0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = (adr<<1) | w ;
 4f4:	84 eb       	ldi	r24, 0xB4	; 180
 4f6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 4fa:	84 e8       	ldi	r24, 0x84	; 132
 4fc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 500:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 504:	87 ff       	sbrs	r24, 7
 506:	fc cf       	rjmp	.-8      	; 0x500 <__FUSE_REGION_LENGTH__+0x100>
	twstatus = TW_STATUS & 0xF8;
 508:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 50c:	8e e5       	ldi	r24, 0x5E	; 94
 50e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 512:	84 e8       	ldi	r24, 0x84	; 132
 514:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 518:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 51c:	87 ff       	sbrs	r24, 7
 51e:	fc cf       	rjmp	.-8      	; 0x518 <__FUSE_REGION_LENGTH__+0x118>
	twstatus = TW_STATUS & 0xF8;
 520:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 524:	8f e0       	ldi	r24, 0x0F	; 15
 526:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 52a:	84 e8       	ldi	r24, 0x84	; 132
 52c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 530:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 534:	87 ff       	sbrs	r24, 7
 536:	fc cf       	rjmp	.-8      	; 0x530 <__FUSE_REGION_LENGTH__+0x130>
	twstatus = TW_STATUS & 0xF8;
 538:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 53c:	84 e9       	ldi	r24, 0x94	; 148
 53e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(TWCR & (1 << TWSTO));
 542:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 546:	84 fd       	sbrc	r24, 4
 548:	fc cf       	rjmp	.-8      	; 0x542 <__FUSE_REGION_LENGTH__+0x142>
    }
    if (i2c_writeReg(MPR121_ADDR, ELE_CONFIGURATION, &startAll, 1)){
        error_light();
    }
    */
}
 54a:	08 95       	ret

0000054c <main>:

int main (void)
{
    PORTC |= (1 << DDC7);
 54c:	47 9a       	sbi	0x08, 7	; 8
    PORTC &= ~(1 << DDC6);
 54e:	46 98       	cbi	0x08, 6	; 8
    PORTB |= (1 << DDB6);
 550:	2e 9a       	sbi	0x05, 6	; 5
    //DDxn = 1 means output
    DDRC |= (1 << DDC7) | (1 << DDC6);
 552:	87 b1       	in	r24, 0x07	; 7
 554:	80 6c       	ori	r24, 0xC0	; 192
 556:	87 b9       	out	0x07, r24	; 7
    DDRB |= (1 << DDB6);
 558:	26 9a       	sbi	0x04, 6	; 4
	PORTD &= ~(1 << 0); //Port D0 SCL
 55a:	58 98       	cbi	0x0b, 0	; 11
	PORTD &= ~(1 << 1); //Port D1 SDA
 55c:	59 98       	cbi	0x0b, 1	; 11
	TWBR = ((( F_CPU / SCL_CLOCK ) - 16) / 2); 
 55e:	8c e0       	ldi	r24, 0x0C	; 12
 560:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
	TWSR = 0; 
 564:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = ( 1 << TWEN ); // enable the i2c bus f
 568:	84 e0       	ldi	r24, 0x04	; 4
 56a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    //ddrb = 1 & ddb5
    //PORtxn = 1
    //init_uart(9600);
    //
    init_i2c();
    init_MPR121();
 56e:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <init_MPR121>
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 572:	84 ea       	ldi	r24, 0xA4	; 164
 574:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ( !(TWCR & (1<<TWINT)))	;
 578:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 57c:	87 ff       	sbrs	r24, 7
 57e:	fc cf       	rjmp	.-8      	; 0x578 <main+0x2c>
	twstatus = TW_STATUS & 0xF8;
 580:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = (adr<<1) | w ;
 584:	84 eb       	ldi	r24, 0xB4	; 180
 586:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 58a:	84 e8       	ldi	r24, 0x84	; 132
 58c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 590:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 594:	87 ff       	sbrs	r24, 7
 596:	fc cf       	rjmp	.-8      	; 0x590 <main+0x44>
	twstatus = TW_STATUS & 0xF8;
 598:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 59c:	8d e2       	ldi	r24, 0x2D	; 45
 59e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 5a2:	84 e8       	ldi	r24, 0x84	; 132
 5a4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 5a8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 5ac:	87 ff       	sbrs	r24, 7
 5ae:	fc cf       	rjmp	.-8      	; 0x5a8 <main+0x5c>
	twstatus = TW_STATUS & 0xF8;
 5b0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 5b4:	84 ea       	ldi	r24, 0xA4	; 164
 5b6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ( !(TWCR & (1<<TWINT)))	;
 5ba:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 5be:	87 ff       	sbrs	r24, 7
 5c0:	fc cf       	rjmp	.-8      	; 0x5ba <main+0x6e>
	twstatus = TW_STATUS & 0xF8;
 5c2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = (adr<<1) | w ;
 5c6:	85 eb       	ldi	r24, 0xB5	; 181
 5c8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 5cc:	84 e8       	ldi	r24, 0x84	; 132
 5ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 5d2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 5d6:	87 ff       	sbrs	r24, 7
 5d8:	fc cf       	rjmp	.-8      	; 0x5d2 <main+0x86>
	twstatus = TW_STATUS & 0xF8;
 5da:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = (1 << TWINT) | (1 << TWEN);
 5de:	84 e8       	ldi	r24, 0x84	; 132
 5e0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 5e4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 5e8:	87 ff       	sbrs	r24, 7
 5ea:	fc cf       	rjmp	.-8      	; 0x5e4 <main+0x98>
	return TWDR;
 5ec:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 5f0:	94 e9       	ldi	r25, 0x94	; 148
 5f2:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(TWCR & (1 << TWSTO));
 5f6:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 5fa:	94 fd       	sbrc	r25, 4
 5fc:	fc cf       	rjmp	.-8      	; 0x5f6 <main+0xaa>
    send_i2c(NCLR);
    connect_i2c(MPR121_ADDR, 1);
    uint8_t check = read_i2c();
    stop_i2c();

    if (check != 0x0E) 
 5fe:	8e 30       	cpi	r24, 0x0E	; 14
 600:	11 f0       	breq	.+4      	; 0x606 <main+0xba>
void error_light() { PORTC |= (1 << DDC6); }
 602:	46 9a       	sbi	0x08, 6	; 8
 604:	ff cf       	rjmp	.-2      	; 0x604 <main+0xb8>
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 606:	24 ea       	ldi	r18, 0xA4	; 164
	TWDR = (adr<<1) | w ;
 608:	54 eb       	ldi	r21, 0xB4	; 180
	TWCR = (1 << TWINT) | (1<<TWEN);
 60a:	94 e8       	ldi	r25, 0x84	; 132
	TWDR = (adr<<1) | w ;
 60c:	45 eb       	ldi	r20, 0xB5	; 181
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 60e:	34 e9       	ldi	r19, 0x94	; 148
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 610:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ( !(TWCR & (1<<TWINT)))	;
 614:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 618:	87 ff       	sbrs	r24, 7
 61a:	fc cf       	rjmp	.-8      	; 0x614 <main+0xc8>
	twstatus = TW_STATUS & 0xF8;
 61c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = (adr<<1) | w ;
 620:	50 93 bb 00 	sts	0x00BB, r21	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 624:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 628:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 62c:	87 ff       	sbrs	r24, 7
 62e:	fc cf       	rjmp	.-8      	; 0x628 <main+0xdc>
	twstatus = TW_STATUS & 0xF8;
 630:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = data;
 634:	10 92 bb 00 	sts	0x00BB, r1	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 638:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 63c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 640:	87 ff       	sbrs	r24, 7
 642:	fc cf       	rjmp	.-8      	; 0x63c <main+0xf0>
	twstatus = TW_STATUS & 0xF8;
 644:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
 648:	20 93 bc 00 	sts	0x00BC, r18	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while ( !(TWCR & (1<<TWINT)))	;
 64c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 650:	87 ff       	sbrs	r24, 7
 652:	fc cf       	rjmp	.-8      	; 0x64c <main+0x100>
	twstatus = TW_STATUS & 0xF8;
 654:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWDR = (adr<<1) | w ;
 658:	40 93 bb 00 	sts	0x00BB, r20	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1<<TWEN);
 65c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 660:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 664:	87 ff       	sbrs	r24, 7
 666:	fc cf       	rjmp	.-8      	; 0x660 <main+0x114>
	twstatus = TW_STATUS & 0xF8;
 668:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
	TWCR = (1 << TWINT) | (1 << TWEN);
 66c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(!(TWCR & (1 << TWINT)));
 670:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 674:	87 ff       	sbrs	r24, 7
 676:	fc cf       	rjmp	.-8      	; 0x670 <main+0x124>
	return TWDR;
 678:	60 91 bb 00 	lds	r22, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 67c:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while(TWCR & (1 << TWSTO));
 680:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 684:	84 fd       	sbrc	r24, 4
 686:	fc cf       	rjmp	.-8      	; 0x680 <main+0x134>
        send_i2c(TOUCH_STATUS_0);
        connect_i2c(MPR121_ADDR, 1);
        on = read_i2c();
        stop_i2c();

        PINC |= (1 << DDC7); //heartbeat
 688:	37 9a       	sbi	0x06, 7	; 6
        if (on != 0)
 68a:	61 11       	cpse	r22, r1
 68c:	0b c0       	rjmp	.+22     	; 0x6a4 <main+0x158>
            PORTB |= (1 << DDB6);
            while (1) {}
        }
        else 
        {
            PORTB &= ~(1 << DDB6);
 68e:	2e 98       	cbi	0x05, 6	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 690:	6f ef       	ldi	r22, 0xFF	; 255
 692:	73 ec       	ldi	r23, 0xC3	; 195
 694:	89 e0       	ldi	r24, 0x09	; 9
 696:	61 50       	subi	r22, 0x01	; 1
 698:	70 40       	sbci	r23, 0x00	; 0
 69a:	80 40       	sbci	r24, 0x00	; 0
 69c:	e1 f7       	brne	.-8      	; 0x696 <main+0x14a>
 69e:	00 c0       	rjmp	.+0      	; 0x6a0 <main+0x154>
 6a0:	00 00       	nop
 6a2:	b6 cf       	rjmp	.-148    	; 0x610 <main+0xc4>
            PORTB |= (1 << DDB6);
 6a4:	2e 9a       	sbi	0x05, 6	; 5
 6a6:	ff cf       	rjmp	.-2      	; 0x6a6 <main+0x15a>

000006a8 <_exit>:
 6a8:	f8 94       	cli

000006aa <__stop_program>:
 6aa:	ff cf       	rjmp	.-2      	; 0x6aa <__stop_program>
